{"remainingRequest":"/Users/wsabates/Station-F-test/client/node_modules/thread-loader/dist/cjs.js!/Users/wsabates/Station-F-test/client/node_modules/babel-loader/lib/index.js!/Users/wsabates/Station-F-test/client/src/store/store.js","dependencies":[{"path":"/Users/wsabates/Station-F-test/client/src/store/store.js","mtime":1553188822000},{"path":"/Users/wsabates/Station-F-test/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wsabates/Station-F-test/client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wsabates/Station-F-test/client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/wsabates/Station-F-test/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '../routes';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    sb_color: '',\n    sb_msg: '',\n    Rooms: ''\n  },\n  getters: {\n    sb_color: function sb_color(state) {\n      return state.sb_color;\n    },\n    sb_msg: function sb_msg(state) {\n      return state.sb_msg;\n    },\n    GetRooms: function GetRooms(state) {\n      return state.Rooms;\n    }\n  },\n  mutations: {\n    snackbar: function snackbar(state, sb) {\n      state.sb_color = sb.color;\n      state.sb_msg = sb.msg;\n    },\n    GetRooms: function GetRooms(state, Rooms) {\n      state.Rooms = Rooms.Rooms;\n    }\n  },\n  actions: {\n    Reserver: function () {\n      var _Reserver = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(_ref, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return axios.post('https://station-f-test.herokuapp.com/reservation', {\n                  payload: payload\n                }).then(function (res) {\n                  if (res.data.success === false) {\n                    commit('snackbar', {\n                      color: \"red\",\n                      msg: res.data.msg\n                    });\n                  } else if (res.data.success === true) {\n                    commit('snackbar', {\n                      color: \"green\",\n                      msg: res.data.msg\n                    });\n                  }\n                }).catch(function (e) {\n                  console.log(e);\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function Reserver(_x, _x2) {\n        return _Reserver.apply(this, arguments);\n      }\n\n      return Reserver;\n    }(),\n    GetRooms: function () {\n      var _GetRooms = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(_ref2, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                _context2.next = 3;\n                return axios.get(\"https://station-f-test.herokuapp.com/api/getrooms/\".concat(payload.date, \"/\").concat(payload.time, \"?equipement=\").concat(payload.equipement, \"&nb_pers=\").concat(payload.nb_pers)).then(function (res) {\n                  if (res.data.success === true) {\n                    commit('GetRooms', {\n                      Rooms: res.data.rooms\n                    });\n                  } else if (res.data.success === false) {\n                    commit('snackbar', {\n                      color: \"red\",\n                      msg: res.data.msg\n                    });\n                  }\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function GetRooms(_x3, _x4) {\n        return _GetRooms.apply(this, arguments);\n      }\n\n      return GetRooms;\n    }(),\n    Annuler_Res: function () {\n      var _Annuler_Res = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                _context3.next = 3;\n                return axios.post('https://station-f-test.herokuapp.com/annuler', {\n                  email: payload.email,\n                  Id_Res: payload.Id_Res\n                }).then(function (res) {\n                  if (res.data.success === true) {\n                    commit('snackbar', {\n                      color: \"green\",\n                      msg: res.data.msg\n                    });\n                    setTimeout(function () {\n                      router.push('/');\n                    }, 2000);\n                  } else if (res.data.success === false) {\n                    commit('snackbar', {\n                      color: \"red\",\n                      msg: res.data.msg\n                    });\n                  }\n                });\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function Annuler_Res(_x5, _x6) {\n        return _Annuler_Res.apply(this, arguments);\n      }\n\n      return Annuler_Res;\n    }()\n  }\n});",{"version":3,"sources":["/Users/wsabates/Station-F-test/client/src/store/store.js"],"names":["Vue","Vuex","axios","router","use","Store","state","sb_color","sb_msg","Rooms","getters","GetRooms","mutations","snackbar","sb","color","msg","actions","Reserver","payload","commit","post","then","res","data","success","catch","e","console","log","get","date","time","equipement","nb_pers","rooms","Annuler_Res","email","Id_Res","setTimeout","push"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEAH,GAAG,CAACI,GAAJ,CAASH,IAAT;AAEA,eAAe,IAAIA,IAAI,CAACI,KAAT,CAAgB;AAC9BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADuB;AAM9BC,EAAAA,OAAO,EAAE;AACRH,IAAAA,QADQ,oBACED,KADF,EACU;AACjB,aAAOA,KAAK,CAACC,QAAb;AACA,KAHO;AAIRC,IAAAA,MAJQ,kBAIAF,KAJA,EAIQ;AACf,aAAOA,KAAK,CAACE,MAAb;AACA,KANO;AAORG,IAAAA,QAPQ,oBAOEL,KAPF,EAOU;AACjB,aAAOA,KAAK,CAACG,KAAb;AACA;AATO,GANqB;AAiB9BG,EAAAA,SAAS,EAAE;AACVC,IAAAA,QADU,oBACAP,KADA,EACOQ,EADP,EACY;AACrBR,MAAAA,KAAK,CAACC,QAAN,GAAiBO,EAAE,CAACC,KAApB;AACAT,MAAAA,KAAK,CAACE,MAAN,GAAeM,EAAE,CAACE,GAAlB;AACA,KAJS;AAKVL,IAAAA,QALU,oBAKAL,KALA,EAKOG,KALP,EAKe;AACxBH,MAAAA,KAAK,CAACG,KAAN,GAAcA,KAAK,CAACA,KAApB;AACA;AAPS,GAjBmB;AA0B9BQ,EAAAA,OAAO,EAAE;AACFC,IAAAA,QADE;AAAA;AAAA;AAAA,qDACoBC,OADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,gBAAAA,MADV,QACUA,MADV;AAAA;AAAA,uBAEMlB,KAAK,CAACmB,IAAN,CAAY,kDAAZ,EAAgE;AAAEF,kBAAAA,OAAO,EAAPA;AAAF,iBAAhE,EACXG,IADW,CACL,UAAAC,GAAG,EAAI;AACb,sBAAKA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,KAA1B,EAAkC;AACjCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBL,sBAAAA,KAAK,EAAE,KADY;AAEnBC,sBAAAA,GAAG,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAFK,qBAAd,CAAN;AAIA,mBALD,MAKO,IAAKO,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAA1B,EAAiC;AACvCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBL,sBAAAA,KAAK,EAAE,OADY;AAEnBC,sBAAAA,GAAG,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAFK,qBAAd,CAAN;AAIA;AACD,iBAbW,EAcXU,KAdW,CAcJ,UAAAC,CAAC,EAAI;AACZC,kBAAAA,OAAO,CAACC,GAAR,CAAaF,CAAb;AACA,iBAhBW,CAFN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBFhB,IAAAA,QApBE;AAAA;AAAA;AAAA,uDAoBoBQ,OApBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBUC,gBAAAA,MApBV,SAoBUA,MApBV;AAAA;AAAA,uBAqBDlB,KAAK,CAAC4B,GAAN,6DAAgEX,OAAO,CAACY,IAAxE,cAAgFZ,OAAO,CAACa,IAAxF,yBAA2Gb,OAAO,CAACc,UAAnH,sBAAyId,OAAO,CAACe,OAAjJ,GACJZ,IADI,CACE,UAAAC,GAAG,EAAI;AACb,sBAAKA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAA1B,EAAiC;AAChCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBX,sBAAAA,KAAK,EAAEc,GAAG,CAACC,IAAJ,CAASW;AADG,qBAAd,CAAN;AAGA,mBAJD,MAIO,IAAKZ,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,KAA1B,EAAkC;AACxCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBL,sBAAAA,KAAK,EAAE,KADY;AAEnBC,sBAAAA,GAAG,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAFK,qBAAd,CAAN;AAIA;AACD,iBAZI,CArBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmCFoB,IAAAA,WAnCE;AAAA;AAAA;AAAA,uDAmCuBjB,OAnCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAmCaC,gBAAAA,MAnCb,SAmCaA,MAnCb;AAAA;AAAA,uBAoCMlB,KAAK,CAACmB,IAAN,CAAY,8CAAZ,EAA4D;AAAEgB,kBAAAA,KAAK,EAAElB,OAAO,CAACkB,KAAjB;AAAwBC,kBAAAA,MAAM,EAAEnB,OAAO,CAACmB;AAAxC,iBAA5D,EACXhB,IADW,CACL,UAAAC,GAAG,EAAI;AACb,sBAAKA,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,IAA1B,EAAiC;AAChCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBL,sBAAAA,KAAK,EAAE,OADY;AAEnBC,sBAAAA,GAAG,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAFK,qBAAd,CAAN;AAIAuB,oBAAAA,UAAU,CAAE,YAAM;AACjBpC,sBAAAA,MAAM,CAACqC,IAAP,CAAa,GAAb;AACA,qBAFS,EAEP,IAFO,CAAV;AAGA,mBARD,MAQO,IAAKjB,GAAG,CAACC,IAAJ,CAASC,OAAT,KAAqB,KAA1B,EAAkC;AACxCL,oBAAAA,MAAM,CAAE,UAAF,EAAc;AACnBL,sBAAAA,KAAK,EAAE,KADY;AAEnBC,sBAAAA,GAAG,EAAEO,GAAG,CAACC,IAAJ,CAASR;AAFK,qBAAd,CAAN;AAIA;AACD,iBAhBW,CApCN;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1BqB,CAAhB,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '../routes';\n\nVue.use( Vuex );\n\nexport default new Vuex.Store( {\n\tstate: {\n\t\tsb_color: '',\n\t\tsb_msg: '',\n\t\tRooms: '',\n\t},\n\tgetters: {\n\t\tsb_color( state ) {\n\t\t\treturn state.sb_color\n\t\t},\n\t\tsb_msg( state ) {\n\t\t\treturn state.sb_msg\n\t\t},\n\t\tGetRooms( state ) {\n\t\t\treturn state.Rooms\n\t\t},\n\t},\n\tmutations: {\n\t\tsnackbar( state, sb ) {\n\t\t\tstate.sb_color = sb.color\n\t\t\tstate.sb_msg = sb.msg\n\t\t},\n\t\tGetRooms( state, Rooms ) {\n\t\t\tstate.Rooms = Rooms.Rooms\n\t\t},\n\t},\n\tactions: {\n\t\tasync Reserver( { commit }, payload ) {\n\t\t\treturn await axios.post( 'https://station-f-test.herokuapp.com/reservation', { payload } )\n\t\t\t\t.then( res => {\n\t\t\t\t\tif ( res.data.success === false ) {\n\t\t\t\t\t\tcommit( 'snackbar', {\n\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\tmsg: res.data.msg\n\t\t\t\t\t\t} )\n\t\t\t\t\t} else if ( res.data.success === true ) {\n\t\t\t\t\t\tcommit( 'snackbar', {\n\t\t\t\t\t\t\tcolor: \"green\",\n\t\t\t\t\t\t\tmsg: res.data.msg\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.catch( e => {\n\t\t\t\t\tconsole.log( e )\n\t\t\t\t} )\n\t\t},\n\t\tasync GetRooms( { commit }, payload ) {\n\t\t\tawait axios.get( `https://station-f-test.herokuapp.com/api/getrooms/${payload.date}/${payload.time}?equipement=${payload.equipement}&nb_pers=${payload.nb_pers}` )\n\t\t\t\t.then( res => {\n\t\t\t\t\tif ( res.data.success === true ) {\n\t\t\t\t\t\tcommit( 'GetRooms', {\n\t\t\t\t\t\t\tRooms: res.data.rooms,\n\t\t\t\t\t\t} )\n\t\t\t\t\t} else if ( res.data.success === false ) {\n\t\t\t\t\t\tcommit( 'snackbar', {\n\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\tmsg: res.data.msg\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t},\n\t\tasync Annuler_Res( { commit }, payload ) {\n\t\t\treturn await axios.post( 'https://station-f-test.herokuapp.com/annuler', { email: payload.email, Id_Res: payload.Id_Res } )\n\t\t\t\t.then( res => {\n\t\t\t\t\tif ( res.data.success === true ) {\n\t\t\t\t\t\tcommit( 'snackbar', {\n\t\t\t\t\t\t\tcolor: \"green\",\n\t\t\t\t\t\t\tmsg: res.data.msg\n\t\t\t\t\t\t} )\n\t\t\t\t\t\tsetTimeout( () => {\n\t\t\t\t\t\t\trouter.push( '/' )\n\t\t\t\t\t\t}, 2000 )\n\t\t\t\t\t} else if ( res.data.success === false ) {\n\t\t\t\t\t\tcommit( 'snackbar', {\n\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\tmsg: res.data.msg\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t}\n\t}\n} )\n"]}]}